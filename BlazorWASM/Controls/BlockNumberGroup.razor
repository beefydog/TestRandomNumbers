<div class="container" id="Group@(ng.GroupId)">
    <div class="row">
        <div class="col">
            <div class="custom-control custom-checkbox">
                <input type="checkbox" id="chkGroup@(ng.GroupId)" class="custom-control-input" role="checkbox" @bind="ng.Enabled" @onfocusout="() => HandleChange()" @onclick="() => HandleChange()" />
                <label class="custom-control-label fs-5" for="chkGroup@(ng.GroupId)">&nbsp;Group&nbsp;@(ng.GroupId)</label>
            </div>
            <br />
        </div>
    </div>
    <div class="row">
        <div class="col">
            <label for="groupMin@(ng.GroupId)" class="form-label">Minimum</label>
            <input type="range" id="groupMin@(ng.GroupId)" class="form-range" min="1" max="127" step="1" role="slider" @bind="ng.MinValue" @oninput="@((e) => ng.MinValue = Convert.ToInt32(e.Value))" @onfocusout="() => HandleChange()" />
            <input type="number" id="groupMin@(ng.GroupId)Val" class="form-control" min="1" max="127" role="spinbutton" @bind="ng.MinValue" @onfocusout="() => HandleChange()" @onclick="() => HandleChange()" />
        </div>
        <div class="col">
            <label for="groupMax@(ng.GroupId)" class="form-label">Maximum</label>
            <input type="range" id="groupMax@(ng.GroupId)" class="form-range" min="1" max="255" step="1" role="slider" @bind="ng.MaxValue" @oninput="@((e) => ng.MaxValue = Convert.ToInt32(e.Value))" @onfocusout="() => HandleChange()" />
            <input type="number" id="groupMax@(ng.GroupId)Val" class="form-control" min="1" max="255"  role="spinbutton" @bind="ng.MaxValue" @onfocusout="() => HandleChange()" @onclick="() => HandleChange()" />
        </div>
        <div class="col">
            <label for="numbersPerGroup@(ng.GroupId)" class="form-label">Numbers</label>
            <input type="range" id="numbersPerGroup@(ng.GroupId)" class="form-range" min="1" max="10" step="1" role="slider" @bind="ng.NumbersPerGroup" @oninput="@((e) => ng.NumbersPerGroup  = Convert.ToInt32(e.Value))" @onfocusout="() => HandleChange()" />
            <input type="number" id="numbersPerGroup@(ng.GroupId)Val" class="form-control" min="1" max="10" role="spinbutton" @bind="ng.NumbersPerGroup" @onfocusout="() => HandleChange()" @onclick="() => HandleChange()" />
        </div>
        <div class="col">
            <label for="divergence@(ng.GroupId)" class="form-label">Divergence</label>
            <input type="range" id="divergence@(ng.GroupId)" class="form-range" min="1" max="50" step="1" role="slider" @bind="ng.Divergence" @oninput="@((e) => ng.Divergence = Convert.ToInt32(e.Value))" @onfocusout="() => HandleChange()" />
            <input type="number" id="divergence@(ng.GroupId)Val" class="form-control" min="1" max="50" role="spinbutton" @bind="ng.Divergence" @onfocusout="() => HandleChange()" @onclick="() => HandleChange()" />
        </div>
        <div class="col">
            <label class="form-label">Checks</label>
            <div class="form-check form-switch" style="text-align: left;">
                <input class="form-check-input" type="checkbox" role="switch" id="checkSum@(ng.GroupId)" @bind="ng.CheckSumEnabled" @onfocusout="() => HandleChange()"  />
                <label class="form-check-label" for="checkSum@(ng.GroupId)">Sum</label>
            </div>
            <div class="form-check form-switch" style="text-align: left;">
                <input class="form-check-input" type="checkbox" role="switch" id="checkOE@(ng.GroupId)" @bind="ng.CheckOEEnabled" @onfocusout="() => HandleChange()"  />
                <label class="form-check-label" for="checkOE@(ng.GroupId)">OddEven</label>
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter]
    public NumberGroup ng { get; set; }

    protected override void OnInitialized()
    {

    }

    [Parameter] public EventCallback<NumberGroup> OnItemChange { get; set; }

    private async Task HandleChange()
    {
        await OnItemChange.InvokeAsync(ng);
    }

}
